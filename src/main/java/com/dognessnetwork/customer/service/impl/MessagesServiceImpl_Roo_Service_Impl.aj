// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dognessnetwork.customer.service.impl;

import com.dognessnetwork.customer.domain.Messages;
import com.dognessnetwork.customer.repository.MessagesRepository;
import com.dognessnetwork.customer.service.impl.MessagesServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MessagesServiceImpl_Roo_Service_Impl {
    
    declare @type: MessagesServiceImpl: @Service;
    
    declare @type: MessagesServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessagesRepository MessagesServiceImpl.messagesRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param messagesRepository
     */
    @Autowired
    public MessagesServiceImpl.new(MessagesRepository messagesRepository) {
        setMessagesRepository(messagesRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessagesRepository
     */
    public MessagesRepository MessagesServiceImpl.getMessagesRepository() {
        return messagesRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messagesRepository
     */
    public void MessagesServiceImpl.setMessagesRepository(MessagesRepository messagesRepository) {
        this.messagesRepository = messagesRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messages
     */
    @Transactional
    public void MessagesServiceImpl.delete(Messages messages) {
        getMessagesRepository().delete(messages);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Messages> MessagesServiceImpl.save(Iterable<Messages> entities) {
        return getMessagesRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void MessagesServiceImpl.delete(Iterable<Long> ids) {
        List<Messages> toDelete = getMessagesRepository().findAll(ids);
        getMessagesRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Messages
     */
    @Transactional
    public Messages MessagesServiceImpl.save(Messages entity) {
        return getMessagesRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Messages
     */
    public Messages MessagesServiceImpl.findOne(Long id) {
        return getMessagesRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Messages
     */
    public Messages MessagesServiceImpl.findOneForUpdate(Long id) {
        return getMessagesRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Messages> MessagesServiceImpl.findAll(Iterable<Long> ids) {
        return getMessagesRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Messages> MessagesServiceImpl.findAll() {
        return getMessagesRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long MessagesServiceImpl.count() {
        return getMessagesRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getMessagesRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getMessagesRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findByFormUserOrToUserAndSendTimeGreaterThanEqual(String formUser, String toUser, Long sendTime, Pageable pageable) {
        return getMessagesRepository().findByFormUserOrToUserAndSendTimeGreaterThanEqual(formUser, toUser, sendTime, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime
     * @param sendTime2
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findByFormUserOrToUserAndSendTimeGreaterThanEqualAndSendTimeLessThanEqual(String formUser, String toUser, Long sendTime, Long sendTime2, Pageable pageable) {
        return getMessagesRepository().findByFormUserOrToUserAndSendTimeGreaterThanEqualAndSendTimeLessThanEqual(formUser, toUser, sendTime, sendTime2, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime
     * @param sendTime2
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findByFormUserOrToUserAndSendTimeGreaterThanAndSendTimeLessThanEqual(String formUser, String toUser, Long sendTime, Long sendTime2, Pageable pageable) {
        return getMessagesRepository().findByFormUserOrToUserAndSendTimeGreaterThanAndSendTimeLessThanEqual(formUser, toUser, sendTime, sendTime2, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime1
     * @param sendTime2
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findByFormUserOrToUserAndSendTimeBetween(String formUser, String toUser, Long sendTime1, Long sendTime2, Pageable pageable) {
        return getMessagesRepository().findByFormUserOrToUserAndSendTimeBetween(formUser, toUser, sendTime1, sendTime2, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param sendTime1
     * @param sendTime2
     * @param formUser
     * @param toUser
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findBySendTimeBetweenAndFormUserAndToUser(Long sendTime1, Long sendTime2, String formUser, String toUser, Pageable pageable) {
        return getMessagesRepository().findBySendTimeBetweenAndFormUserAndToUser(sendTime1, sendTime2, formUser, toUser, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param sendTime1
     * @param sendTime2
     * @param formUser
     * @param toUser
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findBySendTimeBetweenOrFormUserOrToUser(Long sendTime1, Long sendTime2, String formUser, String toUser, Pageable pageable) {
        return getMessagesRepository().findBySendTimeBetweenOrFormUserOrToUser(sendTime1, sendTime2, formUser, toUser, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param petUserName
     * @param sendTime1
     * @param sendTime2
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findByPetUserNameAndSendTimeBetween(String petUserName, Long sendTime1, Long sendTime2, Pageable pageable) {
        return getMessagesRepository().findByPetUserNameAndSendTimeBetween(petUserName, sendTime1, sendTime2, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param seat
     * @param sendTime1
     * @param sendTime2
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findBySeatAndSendTimeBetween(String seat, Long sendTime1, Long sendTime2, Pageable pageable) {
        return getMessagesRepository().findBySeatAndSendTimeBetween(seat, sendTime1, sendTime2, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param seat
     * @param petUserName
     * @param sendTime1
     * @param sendTime2
     * @param pageable
     * @return Page
     */
    public Page<Messages> MessagesServiceImpl.findBySeatAndPetUserNameAndSendTimeBetween(String seat, String petUserName, Long sendTime1, Long sendTime2, Pageable pageable) {
        return getMessagesRepository().findBySeatAndPetUserNameAndSendTimeBetween(seat, petUserName, sendTime1, sendTime2, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime
     * @return Long
     */
    public long MessagesServiceImpl.countByFormUserOrToUserAndSendTimeGreaterThanEqual(String formUser, String toUser, Long sendTime) {
        return getMessagesRepository().countByFormUserOrToUserAndSendTimeGreaterThanEqual(formUser, toUser, sendTime);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime
     * @param sendTime2
     * @return Long
     */
    public long MessagesServiceImpl.countByFormUserOrToUserAndSendTimeGreaterThanEqualAndSendTimeLessThanEqual(String formUser, String toUser, Long sendTime, Long sendTime2) {
        return getMessagesRepository().countByFormUserOrToUserAndSendTimeGreaterThanEqualAndSendTimeLessThanEqual(formUser, toUser, sendTime, sendTime2);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime
     * @param sendTime2
     * @return Long
     */
    public long MessagesServiceImpl.countByFormUserOrToUserAndSendTimeGreaterThanAndSendTimeLessThanEqual(String formUser, String toUser, Long sendTime, Long sendTime2) {
        return getMessagesRepository().countByFormUserOrToUserAndSendTimeGreaterThanAndSendTimeLessThanEqual(formUser, toUser, sendTime, sendTime2);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param formUser
     * @param toUser
     * @param sendTime1
     * @param sendTime2
     * @return Long
     */
    public long MessagesServiceImpl.countByFormUserOrToUserAndSendTimeBetween(String formUser, String toUser, Long sendTime1, Long sendTime2) {
        return getMessagesRepository().countByFormUserOrToUserAndSendTimeBetween(formUser, toUser, sendTime1, sendTime2);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param sendTime1
     * @param sendTime2
     * @param formUser
     * @param toUser
     * @return Long
     */
    public long MessagesServiceImpl.countBySendTimeBetweenAndFormUserAndToUser(Long sendTime1, Long sendTime2, String formUser, String toUser) {
        return getMessagesRepository().countBySendTimeBetweenAndFormUserAndToUser(sendTime1, sendTime2, formUser, toUser);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param sendTime1
     * @param sendTime2
     * @param formUser
     * @param toUser
     * @return Long
     */
    public long MessagesServiceImpl.countBySendTimeBetweenOrFormUserOrToUser(Long sendTime1, Long sendTime2, String formUser, String toUser) {
        return getMessagesRepository().countBySendTimeBetweenOrFormUserOrToUser(sendTime1, sendTime2, formUser, toUser);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param petUserName
     * @param sendTime1
     * @param sendTime2
     * @return Long
     */
    public long MessagesServiceImpl.countByPetUserNameAndSendTimeBetween(String petUserName, Long sendTime1, Long sendTime2) {
        return getMessagesRepository().countByPetUserNameAndSendTimeBetween(petUserName, sendTime1, sendTime2);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param seat
     * @param sendTime1
     * @param sendTime2
     * @return Long
     */
    public long MessagesServiceImpl.countBySeatAndSendTimeBetween(String seat, Long sendTime1, Long sendTime2) {
        return getMessagesRepository().countBySeatAndSendTimeBetween(seat, sendTime1, sendTime2);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param seat
     * @param petUserName
     * @param sendTime1
     * @param sendTime2
     * @return Long
     */
    public long MessagesServiceImpl.countBySeatAndPetUserNameAndSendTimeBetween(String seat, String petUserName, Long sendTime1, Long sendTime2) {
        return getMessagesRepository().countBySeatAndPetUserNameAndSendTimeBetween(seat, petUserName, sendTime1, sendTime2);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Messages> MessagesServiceImpl.getEntityType() {
        return Messages.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> MessagesServiceImpl.getIdType() {
        return Long.class;
    }
    
}
